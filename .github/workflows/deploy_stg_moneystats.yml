name: Deploy-STG

on:
  push:
    branches: [develop]

env:
  NODE_VERSION: "16.13.2"

jobs:
  checkout-and-setup:
    name: 🔧 Checkout and Setup
    runs-on: ubuntu-latest
    steps:
      - name: "☁️ Checkout Repository"
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: 🔧 Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: "${{ env.NODE_VERSION }}"

  dependency-and-build:
    name: 📦 Install and Build
    runs-on: ubuntu-latest
    needs: checkout-and-setup
    steps:
      - uses: actions/checkout@v3
      - name: 📦 Dependency Injection
        run: |
          npm install -g @angular/cli
          npm install --force
      - name: 📂 Build
        run: npm run staging

  docker-login:
    name: 🐳 Docker Login
    runs-on: ubuntu-latest
    needs: dependency-and-build
    steps:
      - name: 🐳 Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    environment:
      name: stg-moneystats-angular
    needs: [dependency-and-build, docker-login]
    steps:
      - uses: actions/checkout@v3

      - name: Grant execute permission to script
        run: chmod +x ./rename.sh

      - name: Build the Docker image
        run: docker build . --file Dockerfile --build-arg config=staging --tag angular-moneystats:$(date +%s)

      - name: Get current package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6.2
        with:
          image: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}
          tags: ${{ steps.package-version.outputs.current-version }}, latest
          buildArgs: config=staging
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          multiPlatform: true
          platform: linux/amd64,linux/arm64
